apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: "androidx.navigation.safeargs.kotlin"

android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        applicationId "com.test.navi"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }

        resConfigs "en"
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    android {
        sourceSets {
            String sharedTestDir = 'src/sharedTest/java'
            test {
                java.srcDir sharedTestDir
            }
            androidTest {
                java.srcDir sharedTestDir
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            ext.enableCrashlytics = false
            testCoverageEnabled true
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }

    }

    flavorDimensions "default"

    // If you need to add more flavors, consider using flavor dimensions.
    productFlavors {
        develop {
            dimension "default"
            applicationIdSuffix = ".develop"
        }
        prod {
            dimension "default"
        }
    }

    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name == 'release'
                && variant.getFlavors().get(0).name == 'mock') {
            variant.setIgnore(true)
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests {

        includeAndroidResources = true

        all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
        }
    }

    dataBinding {
        enabled = true
        enabledForTests = true
    }
    buildToolsVersion = '29.0.0'
}



ext {
    // App dependencies
    androidXVersion = '1.0.0'
    androidXTestCoreVersion = '1.2.0'
    androidXTestExtKotlinRunnerVersion = '1.1.1'
    androidXTestRulesVersion = '1.3.0-alpha04'
    androidXAnnotations = '1.1.0'
    androidXLegacySupport = '1.0.0'
    appCompatVersion = '1.1.0'
    archLifecycleVersion = '2.2.0'
    archTestingVersion = '2.1.0'
    cardVersion = '1.0.0'
    coroutinesVersion = '1.3.0'
    dexMakerVersion = '2.12.1'
    fragmentVersion = '1.2.2'
    fragmentKtxVersion = '1.2.2'
    hamcrestVersion = '1.3'
    junitVersion = '4.13'
    materialVersion = '1.1.0'
    mockitoVersion = '2.19.0'
    recyclerViewVersion = '1.1.0'
    robolectricVersion = '4.3.1'
    roomVersion = '2.2.4'
    rulesVersion = '1.0.1'
    timberVersion = '4.7.1'
    truthVersion = '1.0.1'
    crashlyticsVersion = '2.9.5'
    daggerVersion = '2.26'
    espressoVersion = '3.2.0'
    firebaseCoreVersion = '16.0.1'
    firebaseAuthVersion = '16.0.3'
    firestoreVersion = '17.1.0'
    frescoVersion = '1.9.0'
    googleSignInVersion = '16.0.1'
    lifecycle = '1.1.1'
    loggingInterceptorVersion = '4.4.0'
    multiDexVersion = '1.0.3'
    okhttpVersion = '4.4.0'
    parcelerApiVersion = '1.0.4'
    parcelerVersion = '1.0.4'
    runnerVersion = '1.0.1'
}
dependencies {
    implementation project(':lib_module')
    implementation project(':lib_module2')
    // App dependencies
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.cardview:cardview:$cardVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    implementation "androidx.annotation:annotation:$androidXAnnotations"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    implementation "androidx.legacy:legacy-support-v4:$androidXLegacySupport"
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"

    // Architecture Components
    implementation "androidx.lifecycle:lifecycle-extensions:$archLifecycleVersion"
    kapt "androidx.lifecycle:lifecycle-compiler:$archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$archLifecycleVersion"

    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"


    //Dependency Injection
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    // dagger.android package (optional)
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-android-support:$daggerVersion"

    kaptTest "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptAndroidTest "com.google.dagger:dagger-android-processor:$daggerVersion"

    implementation "androidx.test:core:$androidXTestCoreVersion"
    implementation "androidx.fragment:fragment:$fragmentVersion"
    debugImplementation "androidx.fragment:fragment-testing:$fragmentVersion"


    // Resolve conflicts between main and test APK:
    androidTestImplementation "androidx.annotation:annotation:$androidXAnnotations"
    androidTestImplementation "androidx.legacy:legacy-support-v4:$androidXLegacySupport"
    androidTestImplementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    androidTestImplementation "androidx.appcompat:appcompat:$appCompatVersion"
    androidTestImplementation "com.google.android.material:material:$materialVersion"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "androidx.fragment:fragment-ktx:$fragmentKtxVersion"


    //RxJava
    implementation 'io.reactivex.rxjava2:rxjava:2.1.9'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    // view model
    implementation "android.arch.lifecycle:extensions:$lifecycle"
    kapt "android.arch.lifecycle:compiler:$lifecycle"

    //MultiDex
    implementation "com.android.support:multidex:$multiDexVersion"

    implementation "androidx.constraintlayout:constraintlayout:2.0.0-beta4"

}
configurations.all {
    resolutionStrategy.force 'com.google.code.gson:gson:2.8.0'
    resolutionStrategy.force "org.antlr:antlr4-runtime:4.5.3"
    resolutionStrategy.force "org.antlr:antlr4-tool:4.5.3"
    resolutionStrategy.force "org.objenesis:objenesis:2.6"
    resolutionStrategy.force "androidx.test:monitor:1.3.0-alpha04"
}